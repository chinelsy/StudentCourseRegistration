// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentCourseEFcore.DataContext;

namespace StudentCourseEFcore.Migrations
{
    [DbContext(typeof(StudentCourseDbContext))]
    [Migration("20211027124404_FinalData")]
    partial class FinalData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsStudentId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseId", "StudentsStudentId");

                    b.HasIndex("StudentsStudentId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("StudentCourseEFcore.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseCode = "Bio 101",
                            Name = "Life Biology",
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CourseCode = "Phy 101",
                            Name = "Modern Physics",
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 3,
                            CourseCode = "BioTech 101",
                            Name = "Biotechnology",
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 4,
                            CourseCode = "Eng 101",
                            Name = "English",
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 5,
                            CourseCode = "Chem 101",
                            Name = "Physical Chemistry",
                            StudentId = 1
                        },
                        new
                        {
                            CourseId = 6,
                            CourseCode = "Bio 101",
                            Name = "Life Biology",
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 7,
                            CourseCode = "Phy 101",
                            Name = "Modern Physics",
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 8,
                            CourseCode = "BioTech 101",
                            Name = "Biotechnology",
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 9,
                            CourseCode = "Eng 101",
                            Name = "English",
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 10,
                            CourseCode = "Chem 101",
                            Name = "Physical Chemistry",
                            StudentId = 2
                        },
                        new
                        {
                            CourseId = 11,
                            CourseCode = "Bio 101",
                            Name = "Life Biology",
                            StudentId = 3
                        },
                        new
                        {
                            CourseId = 12,
                            CourseCode = "Phy 101",
                            Name = "Modern Physics",
                            StudentId = 3
                        },
                        new
                        {
                            CourseId = 13,
                            CourseCode = "BioTech 101",
                            Name = "Biotechnology",
                            StudentId = 3
                        },
                        new
                        {
                            CourseId = 14,
                            CourseCode = "Eng 101",
                            Name = "English",
                            StudentId = 3
                        },
                        new
                        {
                            CourseId = 15,
                            CourseCode = "Chem 101",
                            Name = "Physical Chemistry",
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("StudentCourseEFcore.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Department = "Botany",
                            FirstName = "Chikki",
                            LastName = "Dike",
                            RegNo = "2010/145354"
                        },
                        new
                        {
                            StudentId = 2,
                            Department = "Zoology",
                            FirstName = "Jikki",
                            LastName = "Agu",
                            RegNo = "2011/235354"
                        },
                        new
                        {
                            StudentId = 3,
                            Department = "Animal sci",
                            FirstName = "Ego",
                            LastName = "Uzoh",
                            RegNo = "2014/145355"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("StudentCourseEFcore.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentCourseEFcore.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
